<o:CustomCheckTargetItem Id="FCCA60D2-047C-4361-8030-B1CBEC8AA429">
<a:ObjectID>FCCA60D2-047C-4361-8030-B1CBEC8AA429</a:ObjectID>
<a:Name>Check window business rule not a source of another joined object  (MDDE)</a:Name>
<a:CreationDate>1724147078</a:CreationDate>
<a:Creator>BuwaldaN</a:Creator>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:HelpMessage>This check ensures that the output of a window business rule cannot be used as the input of another joined object</a:HelpMessage>
<a:OutputMessage>The following objects are using the output of a window business rule as the input of another joined object:</a:OutputMessage>
<a:CheckScript>Function %Check%(obj)   
   &#39; Initialize the result with true.
   %Check% = True
   
   &#39; Retrieve the source objects from the mapping.
   Dim colSourceObjects : Set colSourceObjects = obj.GetExtendedCollection(&quot;mdde_SourceObjects&quot;)
   
   &#39; If the mapping has no source objects, stop here.
   If colSourceObjects.Count = 0 Then
      Exit Function
   End If
   
 
   &#39; Now loop through all source objects.
   Dim objSourceObject
   For Each objSourceObject In colSourceObjects
      &#39; Check if the joined objects is of type windowbusinessrule
      Dim joinedObject : Set joinedObject = GetRealObject(objSourceObject.GetExtendedAttribute(&quot;mdde_JoinedObject&quot;))      
      If Not joinedObject is Nothing Then
         If joinedObject.HasStereotype(&quot;mdde_WindowBusinessRule&quot;) Then
            &#39;WriteDebug(&quot;joinedObject: &quot; &amp; joinedObject.ObjectType &amp; &quot; name: &quot; &amp; joinedObject.DisplayName &amp; &quot; stereotype &quot; + joinedObject.StereoType)
            &#39;WriteDebug(&quot;objSourceObject: &quot; &amp; objSourceObject.Code &amp; &quot; name: &quot; &amp; objSourceObject.DisplayName &amp; &quot; stereotype &quot; + objSourceObject.StereoType)
            &#39;call the function and if it returns true return an error
            Dim boolWindowFunctionUsedAsParent : boolWindowFunctionUsedAsParent = windowFunctionUsedAsParent(objSourceObject, colSourceObjects)               
            If boolWindowFunctionUsedAsParent = True Then         
               WriteError(&quot;The window function &#39;&quot; &amp; objSourceObject.DisplayName &amp; &quot;&#39; in mapping &#39;&quot; &amp; objSourceObject.ParentObject.DisplayName &amp; &quot;&#39; is used as the parent in another mapping.&quot;)
               %Check% = False
            End if       
         End If
      End if
   Next
   
End Function


&#39;Function that checks if a window function is used as the parent in another joined object on the same mapping
Function windowFunctionUsedAsParent(ByRef objWindowFunctionSourceObject, ByRef colSourceObjects)
   &#39; Initialize the result with false.
   windowFunctionUsedAsParent = False
   
   Dim objSourceObject
   For Each objSourceObject In colSourceObjects
   &#39; Loop over the sourceobjects that are not the from and the window function object itself to determine if they have a join condition with the window function as parent   
     If objSourceObject &lt;&gt; objWindowFunctionSourceObject Then
       If UCase(objSourceObject.GetExtendedAttributeText(&quot;mdde_JoinType&quot;)) &lt;&gt; &quot;FROM&quot; Then
         &#39;WriteDebug(&quot;functionobjSourceObject: &quot; &amp; objSourceObject.ObjectType &amp; &quot; name: &quot; &amp; objSourceObject.DisplayName &amp; &quot; stereotype: &quot; &amp; objSourceObject.StereoType)
         &#39; loop over the join conditions for the source object
         Dim objJoinCondition
         For Each objJoinCondition in objSourceObject.GetExtendedCollection(&quot;mdde_JoinConditions&quot;)
            Dim objParentSourceObject : Set objParentSourceObject = objJoinCondition.GetExtendedAttribute(&quot;mdde_ParentSourceObject&quot;)
            If Not objParentSourceObject is Nothing Then
                          
               &#39;WriteDebug(&quot;objParentSourceObject: &quot; &amp; objParentSourceObject.ObjectType &amp; &quot; name: &quot; &amp; objParentSourceObject.DisplayName &amp; &quot; stereotype: &quot; &amp; objParentSourceObject.StereoType)
               &#39;if the parentobject is the window function object then set the variable to true
               If objParentSourceObject = objWindowFunctionSourceObject Then
                  windowFunctionUsedAsParent = True
                  Exit Function
               End if
            End if
         Next 
       End if
     End if
   Next
End Function</a:CheckScript>
<a:AutoFixScrpt>Function %Fix%(obj, outmsg)
   &#39; Implement your automatic correction on &lt;obj&gt; here
   &#39; filling &lt;outmsg&gt; as you wish
   &#39; and return True if successful.

   outmsg = &quot;Automatic correction not implemented&quot;

   %Fix% = False
End Function</a:AutoFixScrpt>
</o:CustomCheckTargetItem>